{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/branch": {
            "get": {
                "description": "Get List Branch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Branch"
                ],
                "summary": "Get List Branch",
                "operationId": "get_list_Branch",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetBranchListBody",
                        "schema": {
                            "$ref": "#/definitions/models.GetListBranchResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create Branch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Branch"
                ],
                "summary": "Create Branch",
                "operationId": "create_Branch",
                "parameters": [
                    {
                        "description": "CreateBranchRequestBody",
                        "name": "branch",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateBranch"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "GetBranchBody",
                        "schema": {
                            "$ref": "#/definitions/models.Branch"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/branch/{id}": {
            "get": {
                "description": "Get By ID Branch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Branch"
                ],
                "summary": "Get By ID Branch",
                "operationId": "get_by_id_Branch",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetBranchBody",
                        "schema": {
                            "$ref": "#/definitions/models.Branch"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update Branch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Branch"
                ],
                "summary": "Update Branch",
                "operationId": "update_Branch",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "UpdateBranchRequestBody",
                        "name": "Branch",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateBranchSwag"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "UpdateBranchBody",
                        "schema": {
                            "$ref": "#/definitions/models.Branch"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Branch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Branch"
                ],
                "summary": "Delete Branch",
                "operationId": "delete_Branch",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "DeleteBranchBody",
                        "schema": {
                            "$ref": "#/definitions/models.Empty"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/car": {
            "get": {
                "description": "Get List Car",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Car"
                ],
                "summary": "Get List Car",
                "operationId": "get_list_car",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetCarListBody",
                        "schema": {
                            "$ref": "#/definitions/models.GetListCarResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create Car",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Car"
                ],
                "summary": "Create Car",
                "operationId": "create_car",
                "parameters": [
                    {
                        "description": "CreateCarRequestBody",
                        "name": "Car",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateCar"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "GetCarBody",
                        "schema": {
                            "$ref": "#/definitions/models.Car"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/car/{id}": {
            "get": {
                "description": "Get By ID Car",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Car"
                ],
                "summary": "Get By ID Car",
                "operationId": "get_by_id_car",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetCarBody",
                        "schema": {
                            "$ref": "#/definitions/models.Car"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update Car",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Car"
                ],
                "summary": "Update Car",
                "operationId": "update_car",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "UpdateCarRequestBody",
                        "name": "Car",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateCarSwag"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "UpdateCarBody",
                        "schema": {
                            "$ref": "#/definitions/models.Car"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Car",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Car"
                ],
                "summary": "Delete Car",
                "operationId": "delete_car",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "DeleteCarBody",
                        "schema": {
                            "$ref": "#/definitions/models.Empty"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/client": {
            "get": {
                "description": "Get List Client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "summary": "Get List Client",
                "operationId": "get_list_client",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetClientListBody",
                        "schema": {
                            "$ref": "#/definitions/models.GetListClientResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create Client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "summary": "Create Client",
                "operationId": "create_client",
                "parameters": [
                    {
                        "description": "CreateClientRequestBody",
                        "name": "Client",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateClient"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "GetClientBody",
                        "schema": {
                            "$ref": "#/definitions/models.Client"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/client/{id}": {
            "get": {
                "description": "Get By ID Client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "summary": "Get By ID Client",
                "operationId": "get_by_id_client",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetClientBody",
                        "schema": {
                            "$ref": "#/definitions/models.Client"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update Client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "summary": "Update Client",
                "operationId": "update_client",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "UpdateClientRequestBody",
                        "name": "Client",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateClientSwag"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "UpdateClientBody",
                        "schema": {
                            "$ref": "#/definitions/models.Client"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "summary": "Delete Client",
                "operationId": "delete_client",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "DeleteClientBody",
                        "schema": {
                            "$ref": "#/definitions/models.Empty"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/investor": {
            "get": {
                "description": "Get List Investor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Investor"
                ],
                "summary": "Get List Investor",
                "operationId": "get_list_Investor",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetInvestorListBody",
                        "schema": {
                            "$ref": "#/definitions/models.GetListInvestorResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create Investor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Investor"
                ],
                "summary": "Create Investor",
                "operationId": "create_Investor",
                "parameters": [
                    {
                        "description": "CreateInvestorRequestBody",
                        "name": "Investor",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateInvestor"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "GetInvestorBody",
                        "schema": {
                            "$ref": "#/definitions/models.Investor"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/investor/{id}": {
            "get": {
                "description": "Get By ID Investor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Investor"
                ],
                "summary": "Get By ID Investor",
                "operationId": "get_by_id_investor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetInvestorBody",
                        "schema": {
                            "$ref": "#/definitions/models.Investor"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update Investor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Investor"
                ],
                "summary": "Update Investor",
                "operationId": "update_Investor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "UpdateInvestorRequestBody",
                        "name": "Investor",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateInvestorSwag"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "UpdateInvestorBody",
                        "schema": {
                            "$ref": "#/definitions/models.Investor"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Investor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Investor"
                ],
                "summary": "Delete Investor",
                "operationId": "delete_Investor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "DeleteInvestorBody",
                        "schema": {
                            "$ref": "#/definitions/models.Empty"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Create Login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Login"
                ],
                "summary": "Create Login",
                "operationId": "login",
                "parameters": [
                    {
                        "description": "LoginRequestBody",
                        "name": "Login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Login"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "GetLoginBody",
                        "schema": {
                            "$ref": "#/definitions/models.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Argument",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/order": {
            "post": {
                "description": "Create Order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Create Order",
                "operationId": "create_order",
                "parameters": [
                    {
                        "description": "CreateOrderRequestBody",
                        "name": "Order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateOrder"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "GetOrderBody",
                        "schema": {
                            "$ref": "#/definitions/models.Order"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/order/{id}": {
            "get": {
                "description": "Get By ID Order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Get By ID Order",
                "operationId": "get_by_id_order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetOrderBody",
                        "schema": {
                            "$ref": "#/definitions/models.Order"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update Order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Update Order",
                "operationId": "update_order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "UpdateOrderRequestBody",
                        "name": "Order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateOrderSwag"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "UpdateOrderBody",
                        "schema": {
                            "$ref": "#/definitions/models.Order"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Delete Order",
                "operationId": "delete_order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "DeleteOrderBody",
                        "schema": {
                            "$ref": "#/definitions/models.Empty"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update Patch Order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Update Patch Order",
                "operationId": "update_patch_order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "UpdatePatchRequestBody",
                        "name": "Order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdatePatch"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "OrderBody",
                        "schema": {
                            "$ref": "#/definitions/models.Order"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/report/company-share": {
            "get": {
                "description": "Branch share",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Report"
                ],
                "summary": "Branch share",
                "operationId": "Branch Share",
                "responses": {
                    "201": {
                        "description": "GetListBranchShareResponseBody",
                        "schema": {
                            "$ref": "#/definitions/models.GetListBranchShareResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/report/debtors": {
            "get": {
                "description": "debtors",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Report"
                ],
                "summary": "debtors",
                "operationId": "debtors",
                "responses": {
                    "201": {
                        "description": "GetListDebtorResponseBody",
                        "schema": {
                            "$ref": "#/definitions/models.GetListDebtorResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/report/investor-share": {
            "get": {
                "description": "investor share",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Report"
                ],
                "summary": "investor share",
                "operationId": "Intestor Share",
                "responses": {
                    "201": {
                        "description": "GetListInvestorShareResponseBody",
                        "schema": {
                            "$ref": "#/definitions/models.GetListInvestorShareResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user": {
            "post": {
                "description": "Create User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create User",
                "operationId": "create_User",
                "parameters": [
                    {
                        "description": "CreateUserRequestBody",
                        "name": "User",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateUser"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "GetUserBody",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Invalid Argument",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/{id}": {
            "get": {
                "description": "Get By Id User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get By Id User",
                "operationId": "get_by_id_User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetUserBody",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Invalid Argument",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/order": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get List Order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Get List Order",
                "operationId": "get_list_order",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetOrderListBody",
                        "schema": {
                            "$ref": "#/definitions/models.GetListOrderResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/user": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get List User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get List User",
                "operationId": "get_list_User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetUserBody",
                        "schema": {
                            "$ref": "#/definitions/models.GetListUserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Argument",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Branch": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.BranchShare": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "models.Car": {
            "type": "object",
            "properties": {
                "branch_id": {
                    "type": "string"
                },
                "branch_percentage": {
                    "type": "number"
                },
                "crated_at": {
                    "type": "string"
                },
                "daily_limit": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "investor_id": {
                    "type": "string"
                },
                "investor_percentage": {
                    "type": "number"
                },
                "km": {
                    "type": "integer"
                },
                "model": {
                    "type": "string"
                },
                "over_limit": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                },
                "state_number": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.CarOrder": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "state_number": {
                    "type": "string"
                }
            }
        },
        "models.Client": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.CreateBranch": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "models.CreateCar": {
            "type": "object",
            "properties": {
                "branch_id": {
                    "type": "string"
                },
                "branch_percentage": {
                    "type": "number"
                },
                "daily_limit": {
                    "type": "integer"
                },
                "investor_id": {
                    "type": "string"
                },
                "investor_percentage": {
                    "type": "number"
                },
                "km": {
                    "type": "integer"
                },
                "model": {
                    "type": "string"
                },
                "over_limit": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                },
                "state_number": {
                    "type": "string"
                }
            }
        },
        "models.CreateClient": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "models.CreateInvestor": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "models.CreateOrder": {
            "type": "object",
            "properties": {
                "car_id": {
                    "type": "string"
                },
                "client_id": {
                    "type": "string"
                },
                "day_count": {
                    "type": "integer"
                }
            }
        },
        "models.CreateUser": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "models.Debtor": {
            "type": "object",
            "properties": {
                "full_name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "models.Empty": {
            "type": "object"
        },
        "models.GetListBranchResponse": {
            "type": "object",
            "properties": {
                "branch": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Branch"
                    }
                },
                "count": {
                    "type": "integer"
                }
            }
        },
        "models.GetListBranchShareResponse": {
            "type": "object",
            "properties": {
                "branchs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.BranchShare"
                    }
                },
                "count": {
                    "type": "integer"
                }
            }
        },
        "models.GetListCarResponse": {
            "type": "object",
            "properties": {
                "cars": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Car"
                    }
                },
                "count": {
                    "type": "integer"
                }
            }
        },
        "models.GetListClientResponse": {
            "type": "object",
            "properties": {
                "clients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Client"
                    }
                },
                "count": {
                    "type": "integer"
                }
            }
        },
        "models.GetListDebtorResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "debtors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Debtor"
                    }
                }
            }
        },
        "models.GetListInvestorResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "investors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Investor"
                    }
                }
            }
        },
        "models.GetListInvestorShareResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "investors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.InvestorShare"
                    }
                }
            }
        },
        "models.GetListOrderResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Order"
                    }
                }
            }
        },
        "models.GetListUserResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.User"
                    }
                }
            }
        },
        "models.Investor": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.InvestorShare": {
            "type": "object",
            "properties": {
                "full_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "models.Login": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.LoginResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                }
            }
        },
        "models.Order": {
            "type": "object",
            "properties": {
                "car": {
                    "$ref": "#/definitions/models.CarOrder"
                },
                "car_id": {
                    "type": "string"
                },
                "client_full_name": {
                    "type": "string"
                },
                "client_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "day_count": {
                    "type": "number"
                },
                "give_km": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "paid_price": {
                    "type": "number"
                },
                "recieve_km": {
                    "type": "number"
                },
                "status": {
                    "type": "string"
                },
                "total_price": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.UpdateBranchSwag": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "models.UpdateCarSwag": {
            "type": "object",
            "properties": {
                "branch_id": {
                    "type": "string"
                },
                "branch_percentage": {
                    "type": "number"
                },
                "daily_limit": {
                    "type": "integer"
                },
                "investor_id": {
                    "type": "string"
                },
                "investor_percentage": {
                    "type": "number"
                },
                "km": {
                    "type": "integer"
                },
                "model": {
                    "type": "string"
                },
                "over_limit": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                },
                "state_number": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.UpdateClientSwag": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "models.UpdateInvestorSwag": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "models.UpdateOrderSwag": {
            "type": "object",
            "properties": {
                "car_id": {
                    "type": "string"
                },
                "client_id": {
                    "type": "string"
                },
                "paid_price": {
                    "type": "number"
                }
            }
        },
        "models.UpdatePatch": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "additionalProperties": true
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}