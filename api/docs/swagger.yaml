definitions:
  models.Branch:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
  models.BranchShare:
    properties:
      id:
        type: string
      name:
        type: string
      price:
        type: number
    type: object
  models.Car:
    properties:
      branch_id:
        type: string
      crated_at:
        type: string
      daily_limit:
        type: number
      id:
        type: string
      investor_id:
        type: string
      investor_percentage:
        type: number
      km:
        type: number
      model:
        type: string
      over_limit:
        type: number
      price:
        type: number
      state_number:
        type: string
      status:
        type: string
      updated_at:
        type: string
    type: object
  models.CarOrder:
    properties:
      id:
        type: string
      model:
        type: string
      state_number:
        type: string
    type: object
  models.Client:
    properties:
      address:
        type: string
      created_at:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      phone_number:
        type: string
      updated_at:
        type: string
    type: object
  models.CreateBranch:
    properties:
      name:
        type: string
    type: object
  models.CreateCar:
    properties:
      branch_id:
        type: string
      daily_limit:
        type: number
      investor_id:
        type: string
      investor_percentage:
        type: number
      km:
        type: number
      model:
        type: string
      over_limit:
        type: number
      price:
        type: number
      state_number:
        type: string
    type: object
  models.CreateClient:
    properties:
      address:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      phone_number:
        type: string
    type: object
  models.CreateInvestor:
    properties:
      name:
        type: string
    type: object
  models.CreateOrder:
    properties:
      branch_id:
        type: string
      car_id:
        type: string
      client_id:
        type: string
      day_count:
        type: integer
    type: object
  models.CreateUser:
    properties:
      first_name:
        type: string
      last_name:
        type: string
      login:
        type: string
      password:
        type: string
      phone_number:
        type: string
      typeU:
        type: string
    type: object
  models.Debtor:
    properties:
      full_name:
        type: string
      price:
        type: number
    type: object
  models.Empty:
    type: object
  models.GetListBranchResponse:
    properties:
      branch:
        items:
          $ref: '#/definitions/models.Branch'
        type: array
      count:
        type: integer
    type: object
  models.GetListBranchShareResponse:
    properties:
      branchs:
        items:
          $ref: '#/definitions/models.BranchShare'
        type: array
      count:
        type: integer
    type: object
  models.GetListCarResponse:
    properties:
      cars:
        items:
          $ref: '#/definitions/models.Car'
        type: array
      count:
        type: integer
    type: object
  models.GetListClientResponse:
    properties:
      clients:
        items:
          $ref: '#/definitions/models.Client'
        type: array
      count:
        type: integer
    type: object
  models.GetListDebtorResponse:
    properties:
      count:
        type: integer
      debtors:
        items:
          $ref: '#/definitions/models.Debtor'
        type: array
    type: object
  models.GetListInvestorResponse:
    properties:
      count:
        type: integer
      investors:
        items:
          $ref: '#/definitions/models.Investor'
        type: array
    type: object
  models.GetListInvestorShareResponse:
    properties:
      count:
        type: integer
      investors:
        items:
          $ref: '#/definitions/models.InvestorShare'
        type: array
    type: object
  models.GetListOrderResponse:
    properties:
      count:
        type: integer
      orders:
        items:
          $ref: '#/definitions/models.Order'
        type: array
    type: object
  models.GetListUserResponse:
    properties:
      count:
        type: integer
      users:
        items:
          $ref: '#/definitions/models.User'
        type: array
    type: object
  models.Investor:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
  models.InvestorShare:
    properties:
      full_name:
        type: string
      id:
        type: string
      price:
        type: number
    type: object
  models.Login:
    properties:
      login:
        type: string
      password:
        type: string
    type: object
  models.LoginResponse:
    properties:
      access_token:
        type: string
    type: object
  models.Order:
    properties:
      branch_id:
        type: string
      car:
        $ref: '#/definitions/models.CarOrder'
      car_id:
        type: string
      client_full_name:
        type: string
      client_id:
        type: string
      created_at:
        type: string
      day_count:
        type: number
      give_km:
        type: number
      id:
        type: string
      paid_price:
        type: number
      recieve_km:
        type: number
      status:
        type: string
      total_price:
        type: number
      updated_at:
        type: string
    type: object
  models.UpdateBranchSwag:
    properties:
      name:
        type: string
    type: object
  models.UpdateCarSwag:
    properties:
      branch_id:
        type: string
      daily_limit:
        type: number
      investor_id:
        type: string
      investor_percentage:
        type: number
      km:
        type: number
      model:
        type: string
      over_limit:
        type: number
      price:
        type: number
      state_number:
        type: string
      status:
        type: string
    type: object
  models.UpdateClientSwag:
    properties:
      address:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      phone_number:
        type: string
    type: object
  models.UpdateInvestorSwag:
    properties:
      name:
        type: string
    type: object
  models.UpdateOrderSwag:
    properties:
      branch_id:
        type: string
      car_id:
        type: string
      client_id:
        type: string
      paid_price:
        type: number
    type: object
  models.UpdatePatch:
    properties:
      data:
        additionalProperties: true
        type: object
      id:
        type: string
    type: object
  models.User:
    properties:
      created_at:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      login:
        type: string
      password:
        type: string
      phone_number:
        type: string
      typeU:
        type: string
      updated_at:
        type: string
    type: object
info:
  contact: {}
paths:
  /branch:
    get:
      consumes:
      - application/json
      description: Get List Branch
      operationId: get_list_Branch
      parameters:
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GetBranchListBody
          schema:
            $ref: '#/definitions/models.GetListBranchResponse'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Get List Branch
      tags:
      - Branch
    post:
      consumes:
      - application/json
      description: Create Branch
      operationId: create_Branch
      parameters:
      - description: CreateBranchRequestBody
        in: body
        name: branch
        required: true
        schema:
          $ref: '#/definitions/models.CreateBranch'
      produces:
      - application/json
      responses:
        "201":
          description: GetBranchBody
          schema:
            $ref: '#/definitions/models.Branch'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Create Branch
      tags:
      - Branch
  /branch/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Branch
      operationId: delete_Branch
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: DeleteBranchBody
          schema:
            $ref: '#/definitions/models.Empty'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Delete Branch
      tags:
      - Branch
    get:
      consumes:
      - application/json
      description: Get By ID Branch
      operationId: get_by_id_Branch
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GetBranchBody
          schema:
            $ref: '#/definitions/models.Branch'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Get By ID Branch
      tags:
      - Branch
    put:
      consumes:
      - application/json
      description: Update Branch
      operationId: update_Branch
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: UpdateBranchRequestBody
        in: body
        name: Branch
        required: true
        schema:
          $ref: '#/definitions/models.UpdateBranchSwag'
      produces:
      - application/json
      responses:
        "202":
          description: UpdateBranchBody
          schema:
            $ref: '#/definitions/models.Branch'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Update Branch
      tags:
      - Branch
  /car:
    get:
      consumes:
      - application/json
      description: Get List Car
      operationId: get_list_car
      parameters:
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: GetCarListBody
          schema:
            $ref: '#/definitions/models.GetListCarResponse'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Get List Car
      tags:
      - Car
    post:
      consumes:
      - application/json
      description: Create Car
      operationId: create_car
      parameters:
      - description: CreateCarRequestBody
        in: body
        name: Car
        required: true
        schema:
          $ref: '#/definitions/models.CreateCar'
      produces:
      - application/json
      responses:
        "201":
          description: GetCarBody
          schema:
            $ref: '#/definitions/models.Car'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Create Car
      tags:
      - Car
  /car/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Car
      operationId: delete_car
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: DeleteCarBody
          schema:
            $ref: '#/definitions/models.Empty'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Delete Car
      tags:
      - Car
    get:
      consumes:
      - application/json
      description: Get By ID Car
      operationId: get_by_id_car
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GetCarBody
          schema:
            $ref: '#/definitions/models.Car'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Get By ID Car
      tags:
      - Car
    put:
      consumes:
      - application/json
      description: Update Car
      operationId: update_car
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: UpdateCarRequestBody
        in: body
        name: Car
        required: true
        schema:
          $ref: '#/definitions/models.UpdateCarSwag'
      produces:
      - application/json
      responses:
        "202":
          description: UpdateCarBody
          schema:
            $ref: '#/definitions/models.Car'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Update Car
      tags:
      - Car
  /client:
    get:
      consumes:
      - application/json
      description: Get List Client
      operationId: get_list_client
      parameters:
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: GetClientListBody
          schema:
            $ref: '#/definitions/models.GetListClientResponse'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Get List Client
      tags:
      - Client
    post:
      consumes:
      - application/json
      description: Create Client
      operationId: create_client
      parameters:
      - description: CreateClientRequestBody
        in: body
        name: Client
        required: true
        schema:
          $ref: '#/definitions/models.CreateClient'
      produces:
      - application/json
      responses:
        "201":
          description: GetClientBody
          schema:
            $ref: '#/definitions/models.Client'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Create Client
      tags:
      - Client
  /client/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Client
      operationId: delete_client
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: DeleteClientBody
          schema:
            $ref: '#/definitions/models.Empty'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Delete Client
      tags:
      - Client
    get:
      consumes:
      - application/json
      description: Get By ID Client
      operationId: get_by_id_client
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GetClientBody
          schema:
            $ref: '#/definitions/models.Client'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Get By ID Client
      tags:
      - Client
    put:
      consumes:
      - application/json
      description: Update Client
      operationId: update_client
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: UpdateClientRequestBody
        in: body
        name: Client
        required: true
        schema:
          $ref: '#/definitions/models.UpdateClientSwag'
      produces:
      - application/json
      responses:
        "202":
          description: UpdateClientBody
          schema:
            $ref: '#/definitions/models.Client'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Update Client
      tags:
      - Client
  /investor:
    get:
      consumes:
      - application/json
      description: Get List Investor
      operationId: get_list_Investor
      parameters:
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: GetInvestorListBody
          schema:
            $ref: '#/definitions/models.GetListInvestorResponse'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Get List Investor
      tags:
      - Investor
    post:
      consumes:
      - application/json
      description: Create Investor
      operationId: create_Investor
      parameters:
      - description: CreateInvestorRequestBody
        in: body
        name: Investor
        required: true
        schema:
          $ref: '#/definitions/models.CreateInvestor'
      produces:
      - application/json
      responses:
        "201":
          description: GetInvestorBody
          schema:
            $ref: '#/definitions/models.Investor'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Create Investor
      tags:
      - Investor
  /investor/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Investor
      operationId: delete_Investor
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: DeleteInvestorBody
          schema:
            $ref: '#/definitions/models.Empty'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Delete Investor
      tags:
      - Investor
    get:
      consumes:
      - application/json
      description: Get By ID Investor
      operationId: get_by_id_investor
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GetInvestorBody
          schema:
            $ref: '#/definitions/models.Investor'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Get By ID Investor
      tags:
      - Investor
    put:
      consumes:
      - application/json
      description: Update Investor
      operationId: update_Investor
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: UpdateInvestorRequestBody
        in: body
        name: Investor
        required: true
        schema:
          $ref: '#/definitions/models.UpdateInvestorSwag'
      produces:
      - application/json
      responses:
        "202":
          description: UpdateInvestorBody
          schema:
            $ref: '#/definitions/models.Investor'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Update Investor
      tags:
      - Investor
  /login:
    post:
      consumes:
      - application/json
      description: Create Login
      operationId: login
      parameters:
      - description: LoginRequestBody
        in: body
        name: Login
        required: true
        schema:
          $ref: '#/definitions/models.Login'
      produces:
      - application/json
      responses:
        "201":
          description: GetLoginBody
          schema:
            $ref: '#/definitions/models.LoginResponse'
        "400":
          description: Invalid Argument
          schema:
            type: string
        "500":
          description: Server Error
          schema:
            type: string
      summary: Create Login
      tags:
      - Login
  /order:
    post:
      consumes:
      - application/json
      description: Create Order
      operationId: create_order
      parameters:
      - description: CreateOrderRequestBody
        in: body
        name: Order
        required: true
        schema:
          $ref: '#/definitions/models.CreateOrder'
      produces:
      - application/json
      responses:
        "201":
          description: GetOrderBody
          schema:
            $ref: '#/definitions/models.Order'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Create Order
      tags:
      - Order
  /order/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Order
      operationId: delete_order
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: DeleteOrderBody
          schema:
            $ref: '#/definitions/models.Empty'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Delete Order
      tags:
      - Order
    get:
      consumes:
      - application/json
      description: Get By ID Order
      operationId: get_by_id_order
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GetOrderBody
          schema:
            $ref: '#/definitions/models.Order'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Get By ID Order
      tags:
      - Order
    patch:
      consumes:
      - application/json
      description: Update Patch Order
      operationId: update_patch_order
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: UpdatePatchRequestBody
        in: body
        name: Order
        required: true
        schema:
          $ref: '#/definitions/models.UpdatePatch'
      produces:
      - application/json
      responses:
        "202":
          description: OrderBody
          schema:
            $ref: '#/definitions/models.Order'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Update Patch Order
      tags:
      - Order
    put:
      consumes:
      - application/json
      description: Update Order
      operationId: update_order
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: UpdateOrderRequestBody
        in: body
        name: Order
        required: true
        schema:
          $ref: '#/definitions/models.UpdateOrderSwag'
      produces:
      - application/json
      responses:
        "202":
          description: UpdateOrderBody
          schema:
            $ref: '#/definitions/models.Order'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Update Order
      tags:
      - Order
  /report/company-share:
    get:
      consumes:
      - application/json
      description: Branch share
      operationId: Branch Share
      produces:
      - application/json
      responses:
        "201":
          description: GetListBranchShareResponseBody
          schema:
            $ref: '#/definitions/models.GetListBranchShareResponse'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Branch share
      tags:
      - Report
  /report/debtors:
    get:
      consumes:
      - application/json
      description: debtors
      operationId: debtors
      produces:
      - application/json
      responses:
        "201":
          description: GetListDebtorResponseBody
          schema:
            $ref: '#/definitions/models.GetListDebtorResponse'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: debtors
      tags:
      - Report
  /report/investor-share:
    get:
      consumes:
      - application/json
      description: investor share
      operationId: Intestor Share
      produces:
      - application/json
      responses:
        "201":
          description: GetListInvestorShareResponseBody
          schema:
            $ref: '#/definitions/models.GetListInvestorShareResponse'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: investor share
      tags:
      - Report
  /user:
    post:
      consumes:
      - application/json
      description: Create User
      operationId: create_User
      parameters:
      - description: CreateUserRequestBody
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/models.CreateUser'
      produces:
      - application/json
      responses:
        "201":
          description: GetUserBody
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Invalid Argument
          schema:
            type: string
        "500":
          description: Server Error
          schema:
            type: string
      summary: Create User
      tags:
      - User
  /user/{id}:
    get:
      consumes:
      - application/json
      description: Get By Id User
      operationId: get_by_id_User
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GetUserBody
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Invalid Argument
          schema:
            type: string
        "500":
          description: Server Error
          schema:
            type: string
      summary: Get By Id User
      tags:
      - User
  /v1/order:
    get:
      consumes:
      - application/json
      description: Get List Order
      operationId: get_list_order
      parameters:
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: GetOrderListBody
          schema:
            $ref: '#/definitions/models.GetListOrderResponse'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get List Order
      tags:
      - Order
  /v1/user:
    get:
      consumes:
      - application/json
      description: Get List User
      operationId: get_list_User
      parameters:
      - description: offset
        in: query
        name: offset
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GetUserBody
          schema:
            $ref: '#/definitions/models.GetListUserResponse'
        "400":
          description: Invalid Argument
          schema:
            type: string
        "500":
          description: Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get List User
      tags:
      - User
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
