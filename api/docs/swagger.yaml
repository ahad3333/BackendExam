definitions:
  models.Bebtors:
    properties:
      bebt:
        type: number
      created_at:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
  models.Car:
    properties:
      created_at:
        type: string
      daily_limit:
        type: number
      id:
        type: string
      investor_id:
        type: string
      investor_percentage:
        type: number
      km:
        type: number
      model:
        type: string
      over_limit:
        type: number
      price:
        type: number
      state_number:
        type: string
      status:
        type: string
      updated_at:
        type: string
    type: object
  models.Client:
    properties:
      address:
        type: string
      created_at:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      phone_number:
        type: string
      updated_at:
        type: string
    type: object
  models.CreateClient:
    properties:
      address:
        type: string
      created_at:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      phone_number:
        type: string
      updated_at:
        type: string
    type: object
  models.CreateInvestor:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
  models.CreateOrderSwag:
    properties:
      car_id:
        type: string
      client_id:
        type: string
      day_count:
        type: number
    type: object
  models.Empty:
    type: object
  models.GetListBebt:
    properties:
      count:
        type: integer
      order:
        items:
          $ref: '#/definitions/models.Bebtors'
        type: array
    type: object
  models.GetListCarResponse:
    properties:
      Cars:
        items:
          $ref: '#/definitions/models.Car'
        type: array
      count:
        type: integer
    type: object
  models.GetListClientResponse:
    properties:
      client:
        items:
          $ref: '#/definitions/models.CreateClient'
        type: array
      count:
        type: integer
    type: object
  models.GetListInves:
    properties:
      count:
        type: integer
      order:
        items:
          $ref: '#/definitions/models.InvestorBenefit'
        type: array
    type: object
  models.GetListInvestorResponse:
    properties:
      count:
        type: integer
      investor:
        items:
          $ref: '#/definitions/models.CreateInvestor'
        type: array
    type: object
  models.GetListOrderResponse:
    properties:
      count:
        type: integer
      order:
        items:
          $ref: '#/definitions/models.Order'
        type: array
    type: object
  models.Investor:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
  models.InvestorBenefit:
    properties:
      created_at:
        type: string
      name:
        type: string
      price:
        type: number
      updated_at:
        type: string
    type: object
  models.Order:
    properties:
      car_id:
        type: string
      client_id:
        type: string
      created_at:
        type: string
      day_count:
        type: number
      give_km:
        type: number
      id:
        type: string
      paid_price:
        type: number
      receive_km:
        type: number
      status:
        type: string
      total_price:
        type: number
      updated_at:
        type: string
    type: object
  models.ReturnCar:
    properties:
      car_id:
        type: string
      client_id:
        type: string
      receive_km:
        type: number
    type: object
  models.UpdateCarSwag:
    properties:
      daily_limit:
        type: number
      investor_id:
        type: string
      km:
        type: number
      model:
        type: string
      over_limit:
        type: number
      price:
        type: number
      state_number:
        type: string
    type: object
  models.UpdateClientSwag:
    properties:
      address:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      phone_number:
        type: string
    type: object
  models.UpdateInvestorSwag:
    properties:
      name:
        type: string
    type: object
  models.UpdateOrderSwag:
    properties:
      car_id:
        type: string
      client_id:
        type: string
      paid_price:
        type: number
    type: object
info:
  contact: {}
paths:
  /car:
    get:
      consumes:
      - application/json
      description: Get List Car
      operationId: CarPrimeryKey
      parameters:
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GetCarListBody
          schema:
            $ref: '#/definitions/models.GetListCarResponse'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Get List Car
      tags:
      - Car
    post:
      consumes:
      - application/json
      description: CreateCar
      operationId: CreateCar
      parameters:
      - description: CreateCarRequestBody
        in: body
        name: car
        required: true
        schema:
          $ref: '#/definitions/models.UpdateCarSwag'
      produces:
      - application/json
      responses:
        "201":
          description: GetCarBody
          schema:
            $ref: '#/definitions/models.Car'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: CreateCar
      tags:
      - Car
  /car/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Car
      operationId: DeleteCar
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: DeleteCarBody
          schema:
            $ref: '#/definitions/models.Empty'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Delete Car
      tags:
      - Car
    get:
      consumes:
      - application/json
      description: GetByID Car
      operationId: Get_By_IDCar
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: GetByIDCarBody
          schema:
            $ref: '#/definitions/models.Car'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: GetByID Car
      tags:
      - Car
    put:
      consumes:
      - application/json
      description: Update Car
      operationId: UpdateCar
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: UpdateCarRequestBody
        in: body
        name: car
        required: true
        schema:
          $ref: '#/definitions/models.UpdateCarSwag'
      produces:
      - application/json
      responses:
        "202":
          description: UpdateCarBody
          schema:
            $ref: '#/definitions/models.Car'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Update Car
      tags:
      - Car
  /client:
    get:
      consumes:
      - application/json
      description: Get List Client
      operationId: ClientPrimeryKey
      parameters:
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GetClientkListBody
          schema:
            $ref: '#/definitions/models.GetListClientResponse'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Get List Client
      tags:
      - Client
    post:
      consumes:
      - application/json
      description: CreateClient
      operationId: CreateClient
      parameters:
      - description: CreateClientRequestBody
        in: body
        name: client
        required: true
        schema:
          $ref: '#/definitions/models.UpdateClientSwag'
      produces:
      - application/json
      responses:
        "201":
          description: GetClientBody
          schema:
            $ref: '#/definitions/models.Client'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: CreateClient
      tags:
      - Client
  /client/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Client
      operationId: DeleteClient
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: DeleteClientBody
          schema:
            $ref: '#/definitions/models.Empty'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Delete Client
      tags:
      - Client
    get:
      consumes:
      - application/json
      description: GetByID Client
      operationId: Get_By_IDClient
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: GetByIDClientBody
          schema:
            $ref: '#/definitions/models.Client'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: GetByID Client
      tags:
      - Client
    put:
      consumes:
      - application/json
      description: Update Client
      operationId: UpdateClient
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: UpdateClientRequestBody
        in: body
        name: client
        required: true
        schema:
          $ref: '#/definitions/models.UpdateClientSwag'
      produces:
      - application/json
      responses:
        "202":
          description: UpdateClientBody
          schema:
            $ref: '#/definitions/models.Client'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Update Client
      tags:
      - Client
  /debtor-client:
    get:
      consumes:
      - application/json
      description: Get List Calc
      operationId: CalcBebtPrimeryKey
      parameters:
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GetBabtListBody
          schema:
            $ref: '#/definitions/models.GetListBebt'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Get List Calc
      tags:
      - CalcBebt
  /investor:
    get:
      consumes:
      - application/json
      description: Get List Investor
      operationId: get_list_Investor
      parameters:
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GetInvestorListBody
          schema:
            $ref: '#/definitions/models.GetListInvestorResponse'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Get List Investor
      tags:
      - Investor
    post:
      consumes:
      - application/json
      description: Create Investor
      operationId: create_Investor
      parameters:
      - description: CreateInvestorRequestBody
        in: body
        name: investor
        required: true
        schema:
          $ref: '#/definitions/models.UpdateInvestorSwag'
      produces:
      - application/json
      responses:
        "201":
          description: GetInvestorBody
          schema:
            $ref: '#/definitions/models.Investor'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Create Investor
      tags:
      - Investor
  /investor-share:
    get:
      consumes:
      - application/json
      description: Get List Calc
      operationId: CalcInvesPrimeryKey
      parameters:
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GetCalcListBody
          schema:
            $ref: '#/definitions/models.GetListInves'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Get List Calc
      tags:
      - CalcInves
  /investor/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Investor
      operationId: delete_Investor
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: DeleteInvestorBody
          schema:
            $ref: '#/definitions/models.Empty'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Delete Investor
      tags:
      - Investor
    get:
      consumes:
      - application/json
      description: Get By ID Investor
      operationId: get_by_id_investor
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GetInvestorBody
          schema:
            $ref: '#/definitions/models.Investor'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Get By ID Investor
      tags:
      - Investor
    put:
      consumes:
      - application/json
      description: Update Investor
      operationId: update_investor
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: UpdateInvestorRequestBody
        in: body
        name: investor
        required: true
        schema:
          $ref: '#/definitions/models.UpdateInvestorSwag'
      produces:
      - application/json
      responses:
        "202":
          description: UpdateInvestorBody
          schema:
            $ref: '#/definitions/models.Investor'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Update Investor
      tags:
      - Investor
  /order:
    get:
      consumes:
      - application/json
      description: Get List Order
      operationId: OrderPrimeryKey
      parameters:
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: GetOrderListBody
          schema:
            $ref: '#/definitions/models.GetListOrderResponse'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Get List Order
      tags:
      - Order
    post:
      consumes:
      - application/json
      description: CreateOrder
      operationId: CreateOrder
      parameters:
      - description: CreateOrderRequestBody
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/models.CreateOrderSwag'
      produces:
      - application/json
      responses:
        "201":
          description: GetOrderBody
          schema:
            $ref: '#/definitions/models.Order'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: CreateOrder
      tags:
      - Order
  /order/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Order
      operationId: DeleteOrder
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: DeleteOrderBody
          schema:
            $ref: '#/definitions/models.Empty'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Delete Order
      tags:
      - Order
    get:
      consumes:
      - application/json
      description: GetByID Order
      operationId: Get_By_IDOrder
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: GetByIDCarBody
          schema:
            $ref: '#/definitions/models.Order'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: GetByID Order
      tags:
      - Order
    put:
      consumes:
      - application/json
      description: Update Order
      operationId: UpdateOrder
      parameters:
      - description: id
        in: path
        name: id
        type: string
      - description: UpdateOrderRequestBody
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/models.UpdateOrderSwag'
      produces:
      - application/json
      responses:
        "202":
          description: UpdateCarBody
          schema:
            $ref: '#/definitions/models.Order'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Update Order
      tags:
      - Order
  /return/{id}:
    put:
      consumes:
      - application/json
      description: ReturnCar Order
      operationId: ReturnCar
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: UpdateOrderRequestBody
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/models.ReturnCar'
      produces:
      - application/json
      responses:
        "202":
          description: UpdateCarBody
          schema:
            $ref: '#/definitions/models.Order'
        "400":
          description: Invalid Argumant
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: ReturnCar Order
      tags:
      - ReturnCar
swagger: "2.0"
